{"version":3,"sources":["objects/player.ts"],"names":[],"mappings":"AAAA;;;;;;;;;EASE;;;;;;AAEF,IAAO,OAAO,CAkDb;AAlDD,WAAO,OAAO,EAAC,CAAC;IACZ,8CAA8C;IAC9C;QAA4B,0BAAe;QASvC;YACI,kBAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YAElC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC;YAEtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAE9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YACtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;YAE/D,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;QACjB,CAAC;QAED,mBAAmB;QACX,6BAAY,GAApB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/B,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/B,CAAC;QACL,CAAC;QAGD,iBAAiB;QACV,uBAAM,GAAb;YACI,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB;;;;sCAI0B;QAC9B,CAAC;QACL,aAAC;IAAD,CA/CA,AA+CC,CA/C2B,QAAQ,CAAC,MAAM,GA+C1C;IA/CY,cAAM,SA+ClB,CAAA;AACL,CAAC,EAlDM,OAAO,KAAP,OAAO,QAkDb","file":"objects/player.js","sourcesContent":["/*\nAuthor: Douglas Krein\nLast Modified by: Douglas krein\nLast Modified: 03-29-2016\nFile description: \n- Player class, take care about the player information, position and movment\n\nRevision:\n1 - changed for vertical bounds, changed the axis which the player will move \n*/\n\nmodule objects {\n    // PLAYER CLASS ++++++++++++++++++++++++++++++\n    export class Player extends createjs.Bitmap {\n        \n        // PRIVATE INSTANCE VARIABLES\n        private _upperBounds: number;\n        private _lowerBounds: number;\n\n        // PUBLIC INSTANCE VARIABLES\n        public width: number;\n        public height: number;\n        constructor() {\n            super(assets.getResult(\"avatar\"));\n\n            this.width = this.getBounds().width;\n            this.height = this.getBounds().height;\n\n            this.regX = this.width * 0.5;\n            this.regY = this.height * 0.5;\n\n            this._upperBounds = this.height * 0.5;\n            this._lowerBounds = config.Screen.HEIGHT - (this.height * 0.5);\n\n            this.x = 950;\n        }\n\n        // PRIVATE METHODS \n        private _checkBounds(): void {\n            if (this.y < this._upperBounds) {\n                this.y = this._upperBounds;\n            }\n\n            if (this.y > this._lowerBounds) {\n                this.y = this._lowerBounds;\n            }\n        }\n\n\n        // PUBLIC METHODS\n        public update(): void {\n            this.y = stage.mouseY;\n            this._checkBounds();\n            \n            /*\n            var angle = Math.atan2(stage.mouseY,300)*-1;  \n            angle = angle * (380/Math.PI); \n            var angle = Math.atan2(this.y - stage.mouseY,this.x - stage.mouseX) * 180 / Math.PI;\n            this.rotation = angle;  */\n        }\n    }\n}"],"sourceRoot":"/source/"}